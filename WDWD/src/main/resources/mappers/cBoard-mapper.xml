<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cBoardMapper">

 	<select id="getListCount" resultType="_int">
		select count(*)
		from board b
		    join member m on (bo_writer = me_id)
		    left join contents c on (bo_num = con_ref)
		where bo_del='N'and bo_group= 1
		<if test='boCategory != "" and boCategory != null'>
			<choose>
				<when test='boCategory == "짤방"'>
					and bo_category like '%' || #{boCategory} || '%' 
				</when>
				<when test='boCategory == "아무말"'>
					and bo_category like '%' || #{boCategory} || '%' 
				</when>
				<when test='boCategory == "요청"'>
					and bo_category like '%' || #{boCategory} || '%' 
				</when>
				<when test='boCategory == "질문"'>
					and bo_category like '%' || #{boCategory} || '%' 
				</when>
			</choose>
		
		</if>
		<if test='searchWord != "" and searchWord != null'>
			<choose>
				<when test='searchCate == "title"'>
					and (bo_title like upper('%' || #{searchWord} || '%')
					or bo_title like lower('%' || #{searchWord} || '%'))
				</when>
				<when test='searchCate == "content"'>
					and (bo_con like upper('%' || #{searchWord} || '%')
					or bo_con like lower('%' || #{searchWord} || '%'))
				</when>
				<when test='searchCate == "writer"'>
					and (m.me_nick like upper('%' || #{searchWord} || '%')
					or m.me_nick like lower('%' || #{searchWord} || '%'))
				</when>
				<when test='searchCate == "All"'>
					<!-- and (bo_title like '%' || #{searchWord} || '%' or bo_con like '%' || #{searchWord} || '%') -->
					and ((bo_title like upper('%' || #{searchWord} || '%') or bo_con like upper('%' || #{searchWord} || '%'))
    				or (bo_title like lower('%' || #{searchWord} || '%') or bo_con like lower('%' || #{searchWord} || '%')))
				</when>
			</choose>
		</if>
		order by bo_num desc
	</select>

	
	<select id="selectBoardList" resultMap="boardResultSet">
	
		select b.*, m.me_nick, count(c.con_ref)
		from board b
		    join member m on (bo_writer = me_id)
		    left join contents c on (bo_num = con_ref)
		where bo_del='N'and bo_group= 1
		<if test='boCategory != "" and boCategory != null'>
			<choose>
				<when test='boCategory == "짤방"'>
					and bo_category like '%' || #{boCategory} || '%' 
				</when>
				<when test='boCategory == "아무말"'>
					and bo_category like '%' || #{boCategory} || '%' 
				</when>
				<when test='boCategory == "요청"'>
					and bo_category like '%' || #{boCategory} || '%' 
				</when>
				<when test='boCategory == "질문"'>
					and bo_category like '%' || #{boCategory} || '%' 
				</when>
			</choose>
		
		</if>
		<if test='searchWord != "" and searchWord != null'>
			<choose>
				<when test='searchCate == "title"'>
					and bo_title like upper('%' || #{searchWord} || '%')
					or bo_title like lower('%' || #{searchWord} || '%')
				</when>
				<when test='searchCate == "content"'>
					and bo_con like upper('%' || #{searchWord} || '%')
					or bo_con like lower('%' || #{searchWord} || '%')
				</when>
				<when test='searchCate == "writer"'>
					and m.me_nick like upper('%' || #{searchWord} || '%')
					or m.me_nick like lower('%' || #{searchWord} || '%')
				</when>
				<when test='searchCate == "All"'>
					<!-- and (bo_title like '%' || #{searchWord} || '%' or bo_con like '%' || #{searchWord} || '%') -->
					and (bo_title like upper('%' || #{searchWord} || '%') or bo_con like upper('%' || #{searchWord} || '%'))
    				or (bo_title like lower('%' || #{searchWord} || '%') or bo_con like lower('%' || #{searchWord} || '%'))
				</when>
			</choose>
		</if>
		group by b.bo_num, b.bo_group, b.bo_title, b.bo_con, b.bo_view, b.bo_date,
		        b.bo_update, b.bo_del, b.bo_writer, b.bo_good, b.bo_category,
		        b.bo_renum, m.me_nick
		order by bo_num desc
		
	</select>
	
	<resultMap type="Board" id="boardResultSet">
		<id property="boNum" column="BO_NUM"/>
		<result property="boGroup" column="BO_GROUP"/>
		<result property="boTitle" column="BO_TITLE"/>
		<result property="boContent" column="BO_CON"/>
		<result property="boView" column="BO_VIEW"/>
		<result property="boDate" column="BO_DATE"/>
		<result property="boUpdate" column="BO_UPDATE"/>
		<result property="boDel" column="BO_DEL"/>
		<result property="boWriter" column="BO_WRITER"/>
		<result property="boGood" column="BO_GOOD"/>
		<result property="boCategory" column="BO_CATEGORY"/>
		<result property="boReNum" column="BO_RENUM"/>
		<result property="boWriterNick" column="ME_NICK"/>
		<result property="boFileExist" column="count(c.con_ref)"/>
	</resultMap>
   
   <resultMap type="CBoard" id="CBoardResultSet">
      <id property="boNum" column="BO_NUM"/>
      <result property="boGroup" column="BO_GROUP"/>
      <result property="boTitle" column="BO_TITLE"/>
      <result property="boContent" column="BO_CON"/>
      <result property="boView" column="BO_VIEW"/>
      <result property="boDate" column="BO_DATE"/>
      <result property="boUpdate" column="BO_UPDATE"/>
      <result property="boDel" column="BO_DEL"/>
      <!-- <result property="boWriter" column="BO_WRITER"/> -->
      <result property="boGood" column="BO_GOOD"/>
      <result property="boCategory" column="BO_CATEGORY"/>
      <result property="boReNum" column="BO_RENUM"/>
      <result property="cbStep" column="CB_STEP" />
      <result property="cbSecret" column="CB_SECRET" />
      <result property="cbCash" column="CB_CASH"/>
      <result property="cbCate" column="CB_CATE"/>
      <result property="cbStep1" column="CB_STEP1"/>
      <result property="cbStep2" column="CB_STEP2"/>
      <result property="cbStep3" column="CB_STEP3"/>
      <result property="cbStep4" column="CB_STEP4"/>
      <result property="cbStep5" column="CB_STEP5"/>
      <result property="cbDate" column="CB_DATE"/>
      <result property="cbPrimium" column="CB_PRIMIUM"/>  
      <result property="boWriter" column="ME_NICK"/>      
      <result property="reId" column="RE_ID"/>
      <result property="thumbnail" column="CON_COP"/>
   </resultMap>
   
   <resultMap type="Contents" id="ContentsResultSet">
      <id property="conNum" column="CON_NUM"/>
      <result property="conOri" column="CON_ORI"/>
      <result property="conCop" column="CON_COP"/>
      <result property="conUrl" column="CON_URL"/>
      <result property="conLevel" column="CON_LEVEL"/>
      <result property="conStatus" column="CON_STATUS"/>
      <result property="conRef" column="CON_REF"/>
   </resultMap>
   
   <insert id="cBoardInsert1" parameterType="CBoard">
		insert into board
		values (bo_seq.nextval, #{boGroup}, #{boTitle}, #{boContent}, default, default, default, default, #{boWriter}, default, #{boCategory}, default)
	</insert>
	
	<insert id="cBoardInsert2" parameterType="CBoard">
		insert into cash_board
		values (bo_seq.currval, 1, #{cbSecret}, #{cbCash}, 1, #{cbStep1}, #{cbStep2}, #{cbStep3}, #{cbStep4}, #{cbStep5}, #{cbDate}, #{cbPrimium})
	</insert>
	
	<insert id="directRequest" parameterType="Request">
		insert into request
		values (#{reNum}, #{reId}, #{reCash}, #{rePlz}, null, sysdate, default)
	</insert>
	
	<select id="directWho" parameterType="_int" resultMap="requestResultSet2">
		select * from request
		where re_num = #{boNum}
	</select>
	<!-- 
	<update id="MinusCash" parameterType="CBoard">
		update member
		set me_cash = me_cash - #{cbCash}
		<if test='cbPrimium.equals("Y")'>-10000</if>
		where me_nick = #{boWriter}
	</update>
	 -->
	<insert id="MinusDetail" parameterType="CBoard">
		insert into point_cash
		values (pc_seq.nextval, '의뢰 비용', #{cbCash} <if test='cbPrimium.equals("Y")'>+10000</if>, sysdate, 'C', (select me_id from member where me_nick = #{boWriter}))
	</insert>
	<!-- 
	<update id="PlusCash" parameterType="_int">
		update member
		set me_cash = me_cash + (select cb_cash from cash_board where cb_num = #{boNum})
		where me_id = (select re_id from request where re_num = #{boNum} and re_plz = 'Y') 
	</update>
	 -->
	<insert id="PlusDetail" parameterType="_int">
		insert into point_cash
		values (pc_seq.nextval, '의뢰 수주', (select cb_cash from cash_board where cb_num = #{boNum}), sysdate, 'C', (select re_id from request where re_num = #{boNum} and re_plz = 'Y'))
	</insert>
	
	<select id="cBoardSelect" resultMap="CBoardResultSet">
		select *
		from board
		join cash_board on (board.bo_num = cash_board.cb_num)
		join member on (board.bo_writer = member.me_id)
		where bo_num = (select max(bo_num) from board)
	</select>
	
	<insert id="contentsInsert" parameterType="Contents">
		insert into contents
		values (con_seq.nextval, #{conOri}, #{conCop}, #{conUrl}, #{conLevel}, 'Y', bo_seq.currval)
	</insert>
	
	<select id="cBoardDetail" parameterType="_int" resultMap="CBoardResultSet">
		select *
		from board
		join cash_board on (board.bo_num = cash_board.cb_num)
		join member on (board.bo_writer = member.me_id)
		where bo_num = #{boNum}
	</select>
	
	<select id="cBoardReId" parameterType="_int" resultType="string">
		select me_nick
		from request 
		join member on (request.re_id = member.me_id)
		where re_plz = 'Y' and re_num = #{boNum}
	</select>
	
	<select id="fileList" parameterType="_int" resultMap="ContentsResultSet">
		select *
		from contents
		where con_ref = #{boNum} and con_status = 'Y'
		order by con_level
	</select>
	
	<select id="fileListContest" parameterType="_int" resultMap="ContentsResultSet">
		select *
		from contents
		where con_ref = (select re_refnum from request where re_num = #{boNum} and re_plz = 'Y') and con_status = 'Y'
		order by con_level
	</select>
	
	<insert id="doRequest" parameterType="Request">
		insert into request
		values (#{reNum}, #{reId}, #{reCash}, 'N', null, sysdate, default)
	</insert>
	
	<update id="reqCountUp">
		update board 
		set bo_renum = bo_renum + 1 
		where bo_num = #{reNum}
	</update>
	
	<delete id="cancleRequest" parameterType="Request">
		delete from request
		where re_num = #{reNum} and re_id = #{reId}
	</delete>
	
	<update id="reqCountDown">
		update board 
		set bo_renum = bo_renum - 1 
		where bo_num = #{reNum}
	</update>
	
	<resultMap type="Request" id="requestResultSet">
		<id property="reNum" column="RE_NUM"/>
		<!-- <result property="reId" column="RE_ID"/> -->
		<result property="reCash" column="RE_CASH"/>
		<result property="rePlz" column="RE_PLZ"/>
		<result property="reRefNum" column="RE_REFNUM"/>
		<result property="reDate" column="RE_DATE"/>
		<result property="reId" column="ME_NICK"/>
	</resultMap>
	
	<resultMap type="Request" id="requestResultSet2">
		<id property="reNum" column="RE_NUM"/>
		<result property="reId" column="RE_ID"/>
		<result property="reCash" column="RE_CASH"/>
		<result property="rePlz" column="RE_PLZ"/>
		<result property="reRefNum" column="RE_REFNUM"/>
		<result property="reDate" column="RE_DATE"/>
	</resultMap>
	
	<select id="reqList" resultMap="requestResultSet">
		select *
		from request
		join member on (request.re_id = member.me_id)
		where re_num = #{bId}
		order by re_cash, re_date, me_nick
	</select>
	
	<select id="checkTime" resultMap="CBoardResultSet">
		select *
		from board
		join cash_board on (board.bo_num = cash_board.cb_num)
		join member on (board.bo_writer = member.me_id)
		where bo_group in (3, 4) and cb_date != '마감'
	</select>
	
	<select id="getCbCash" resultMap="requestResultSet2">
		select *
		from (select *
			from request
			where re_num = #{boNum} and re_cash = 
    			(select min(re_cash) from request where re_num = #{boNum})
			order by re_date)
		where rownum = 1
	</select>
	
	<update id="endTime" parameterType="_int">
		update cash_board
		set cb_date = '마감'
		where cb_num = #{boNum}
	</update>
	
	<update id="okCash1" parameterType="Request">
		update cash_board
		set cb_cash = #{reCash}, cb_step = 2, cb_date = '마감'
		where cb_num = #{reNum}
	</update>
	
	<update id="okCash2" parameterType="Request">
		update request
		set re_plz = 'Y'
		where re_num = #{reNum} and re_cash = #{reCash} and re_id = #{reId}
	</update>
	
	<update id="go2stage1" parameterType="Request">
		update (select * from request, member where me_id = re_id)
		set re_plz = 'Y'
		where re_num = #{reNum} and me_nick = #{reId}
	</update>
	
	<update id="go2stage2" parameterType="Request">
		update cash_board
		set cb_step = 2
		where cb_num = #{reNum}
	</update>
	
	<update id="change2stage1" parameterType="_int">
		update board
		set bo_group = 2
		where bo_num = #{boNum}
	</update>
	
	<update id="change2stage2" parameterType="_int">
		update cash_board
		set cb_step = 2
		where cb_num = #{boNum}
	</update>
	
	<update id="change2stage3" parameterType="_int">
		update request
		set re_plz = 'Y'
		where re_num = #{boNum}
	</update>
	
	<update id="directFalse1" parameterType="_int">
		update board
		set bo_group = 2
		where bo_num = #{boNum}
	</update>
	
	<delete id="directFalse2" parameterType="_int">
		delete from request
		where re_num = #{boNum}
	</delete>
	
	<update id="go3stage" parameterType="_int">
		update cash_board
		set cb_step = 3
		where cb_num = #{boNum}
	</update>
	
	<update id="go3stageContest1" parameterType="Request">
		update request
		set re_plz = 'Y'
		where re_num = #{reNum} and re_refnum = #{reRefNum}
	</update>
	
	<update id="go3stageContest2" parameterType="Request">
		update cash_board
		set cb_step = 3
		where cb_num = #{reNum}
	</update>
 	
 	<select id="cBoardReqView" resultMap="boardResultSet" parameterType="_int">
 		select * 
 		from board
 		join request on (board.bo_num = request.re_refnum)
 		where re_num = #{boNum}
 	</select>
 	
 	<select id="cBoardReqView2" resultMap="boardResultSet" parameterType="Request">
 		select * 
 		from board
 		join request on (board.bo_num = request.re_refnum)
 		where re_num = #{reNum} and re_id = #{reId}
 	</select>
 	
 	<select id="reqBList" resultMap="CBoardResultSet" parameterType="_int">
 		select * 
 		from board
 		join request on (board.bo_num = request.re_refnum)
 		join member on (board.bo_writer = member.me_id)
        left join contents on (contents.con_ref = board.bo_num)
 		where re_num = #{boNum} and (con_level is null or con_level = 0)
 	</select>
 	
 	<insert id="registWrite1" parameterType="Board">
 		insert into board
 		values (bo_seq.nextval, 5, '에디터 등록글입니다.', #{boContent}, default, default, default, default, #{boWriter}, default, null, default)
 	</insert>
 	
 	<update id="registWrite2" parameterType="Request">
 		update request
 		set re_refnum = bo_seq.currval
 		where re_num = #{reNum} and re_id = #{reId}
 	</update>
 	
 	<update id="registDelete1" parameterType="Request">
 		update request
 		set re_refnum = null
 		where re_refnum = #{reRefNum} and re_id = #{reId}
 	</update>
 	
 	<delete id="registDelete2" parameterType="Request">
 		delete from contents
 		where con_ref = #{reRefNum}
 	</delete>
 	
 	<delete id="registDelete3" parameterType="Request">
 		delete from board
 		where bo_num = #{reRefNum}
 	</delete>
 	
 	<select id="getProfileImg" parameterType="string" resultType="string">
 		select con_cop
 		from contents
 		join member on (con_num = me_con_num)
 		where me_nick = #{boWriter}
 	</select>
 	
	<select id="getMyReqListCount" parameterType="CBoard" resultType="_int">
		select count(*)
		from board
			 join cash_board on (bo_num = cb_num)
		<if test="cbStep == 2">	
			 left join request on (bo_num = re_num) 
			 left join member on (re_id = me_id)	
		</if>
		<if test="cbStep == 3">	
			 left join request on (bo_num = re_num) 
			 left join member on (re_id = me_id)	
		</if>		
		<where>
			<if test="boWriter != null">
				bo_writer = #{boWriter}
			</if>
			<if test="boGroup != null">
				and bo_group = #{boGroup}
			</if>
			<if test="cbStep != 0">
				and cb_step = #{cbStep}
			</if>
				and bo_del = 'N'
		</where>
	</select>
	
	<insert id="sendChat" parameterType="Chat">
		insert into chat
		values (chat_seq.nextval, #{chatCon}, to_char(sysdate,'yyyy/mm/dd hh24:mi:ss'), #{chatRefNum}, #{chatWriter})
	</insert>
	
	<select id="receiveChat" resultMap="ChatResultSet">
		select *
		from chat
		join member on (chat_writer = me_id)
		where chat_num = (select max(chat_num) from chat)
	</select>
	
	<select id="chatList" parameterType="_int" resultMap="ChatResultSet">
		select *
		from chat
		join member on (chat_writer = me_id)
		where chat_refnum = #{boNum}
		order by chat_num
	</select>
	
	<resultMap type="Chat" id="ChatResultSet">
		<id property="chatNum" column="CHAT_NUM"/>
		<result property="chatCon" column="CHAT_CON"/>
		<result property="chatDate" column="CHAT_DATE"/>
		<result property="chatRefNum" column="CHAT_REFNUM"/>
		<result property="chatWriter" column="ME_NICK"/>
	</resultMap>
	
	<select id="selectMyReqList" parameterType="CBoard" resultMap="RequestResultSet">
		select *
		from board
			 join cash_board on (bo_num = cb_num)
		<if test="cbStep == 1">
			 left join request on (bo_num = re_num)
			 left join member on (re_id = me_id)
		</if>
		<if test="cbStep == 2">
			 left join request on (bo_num = re_num)
			 left join member on (re_id = me_id)
		</if>
		<if test="cbStep == 3">
			 left join request on (bo_num = re_num)
			 left join member on (re_id = me_id)
		</if>
		<where>
			<if test="boWriter != null">
				bo_writer = #{boWriter}
			</if>
			<if test="boGroup != null">
				and bo_group = #{boGroup}
			</if>
			<if test="cbStep != 0">
				and cb_step = #{cbStep}
			</if>
				and bo_del = 'N'
		</where>
		order by bo_date desc, bo_num desc
	</select>
	
	<resultMap type="Request" id="RequestResultSet">
		<id property="boNum" column="BO_NUM"/>
		<result property="boGroup" column="BO_GROUP"/>
		<result property="boTitle" column="BO_TITLE"/>
		<result property="boContent" column="BO_CON"/>
		<result property="boView" column="BO_VIEW"/>
		<result property="boDate" column="BO_DATE"/>
		<result property="boUpdate" column="BO_UPDATE"/>
		<result property="boDel" column="BO_DEL"/>
		<result property="boWriter" column="BO_WRITER"/>
		<result property="boGood" column="BO_GOOD"/>
		<result property="boCategory" column="BO_CATEGORY"/>
		<result property="boReNum" column="BO_RENUM"/>
		<result property="cbStep" column="CB_STEP" />
		<result property="cbSecret" column="CB_SECRET" />
		<result property="cbCash" column="CB_CASH"/>
		<result property="cbCate" column="CB_CATE"/>
		<result property="cbStep1" column="CB_STEP1"/>
		<result property="cbStep2" column="CB_STEP2"/>
		<result property="cbStep3" column="CB_STEP3"/>
		<result property="cbStep4" column="CB_STEP4"/>
		<result property="cbStep5" column="CB_STEP5"/>
		<result property="cbDate" column="CB_DATE"/>
		<result property="cbPrimium" column="CB_PRIMIUM"/>
		<result property="reNum" column="RE_NUM"/>
		<result property="reId" column="ME_NICK"/>
		<result property="reCash" column="RE_CASH"/>
		<result property="rePlz" column="RE_PLZ"/>
		<result property="reRefNum" column="RE_REFNUM"/>
		<result property="reDate" column="RE_DATE"/>
		<result property="reGrade" column="RE_GRADE"/>		      
	</resultMap>	
	
	<select id="getMyWorkListCount" parameterType="Request" resultType="_int">
		select count(*)
		from board
		     join cash_board on (bo_num = cb_num)
		     left join request on (bo_num = re_num)
		<if test="cbStep == 2">
			 left join member on (bo_writer = me_id)
		</if>
		<if test="cbStep == 3">
			 left join member on (bo_writer = me_id)
		</if>     
		<where>
			<if test="reId != null">
				re_id = #{reId}
			</if>
			<if test="boGroup != null">
				and bo_group = #{boGroup}
			</if>
			<if test="cbStep != 0">
				and cb_step = #{cbStep}
			</if>
				and bo_del = 'N'
		</where>
		     
	</select>
	
	<select id="selectMyWorkList" parameterType="Request" resultMap="RequestResultSet">
		select *
		from board
			 join cash_board on (bo_num = cb_num)
			 left join request on (bo_num = re_num)
		<if test="cbStep == 2">
			 left join member on (bo_writer = me_id)
		</if>
		<if test="cbStep == 3">
			 left join member on (bo_writer = me_id)
		</if> 	 
		<where>
			<if test="reId != null">
				re_id = #{reId}
			</if>
			<if test="boGroup != null">
				and bo_group = #{boGroup}
			</if>
			<if test="cbStep != 0">
				and cb_step = #{cbStep}
			</if>
				and bo_del = 'N'
		</where>
		order by bo_date desc, bo_num desc	 
	</select>
	   	
  
  
   	<select id="getListCount2" resultType="_int">
		select count(*)
		from board
			join cash_board on (bo_num = cb_num)
		where BO_GROUP = #{ boGroup } and bo_del = 'N' 
		order by BO_DATE desc
		
	</select>
	
	
		
	<select id="selectList2" parameterType="CBoard" resultMap="CBoardResultSet">
		
		SELECT *
		FROM CASH_BOARD  
			JOIN BOARD ON (BO_NUM = CB_NUM)
			JOIN MEMBER ON(ME_ID = BO_WRITER)
		where BO_GROUP = #{ boGroup } and bo_del = 'N' 
		order by BO_DATE desc
	</select>
	
		
		
		
   	<select id="getCateListCount2"  resultType="_int">
		select count(*)
		from board
			join cash_board on (bo_num = cb_num)
			JOIN MEMBER ON(ME_ID = BO_WRITER) 
		<where>
				<if test= "cBoard.boGroup != null">
					BO_GROUP = #{ cBoard.boGroup }
				</if>
				<if test="cBoard.boCategory != ''"> 
					and BO_CATEGORY = #{ cBoard.boCategory }
				</if>
				<if test="cBoard.cbStep != 0">		
					and cb_step = #{ cBoard.cbStep }
				</if>
					and bo_del = 'N'
				<if test='searchText != null and searchCate != null'>
						<choose>
							<when test='searchCate == "제목"'>
								and bo_title like upper('%' || #{searchText}|| '%') 
								or  bo_title like lower('%' || #{searchText}|| '%') 
							</when>
							<when test='searchCate == "내용"'>
								and bo_con like upper('%' || #{searchText} || '%')
								or bo_con like lower('%' || #{searchText} || '%')
							</when>
							<when test='searchCate == "의뢰인"'>
								and me_nick like upper('%' || #{searchText} || '%')
								or  me_nick like lower('%' || #{searchText} || '%')
							</when>
						</choose>
				</if>
		</where>
		order by BO_DATE desc
	</select>
	
	
		
	<select id="selectCashOneCateList" parameterType="hashmap" resultMap="CBoardResultSet">
	
        SELECT *
		FROM CASH_BOARD  
		JOIN BOARD ON (BO_NUM = CB_NUM)
		JOIN MEMBER ON(ME_ID = BO_WRITER)
		<where>
				bo_del = 'N'
				<if test= "cBoard.boGroup != null">
					and BO_GROUP = #{ cBoard.boGroup }
				</if>
				<if test="cBoard.boCategory != ''"> 
					and BO_CATEGORY = #{ cBoard.boCategory }
				</if>
				<if test="cBoard.cbStep != 0">		
					and cb_step = #{ cBoard.cbStep }
				</if>
				<if test='searchText != null and searchCate != null'>
						<choose>
							<when test='searchCate == "제목"'>
								and (bo_title like upper('%' || #{searchText}|| '%') 
								or  bo_title like lower('%' || #{searchText}|| '%'))
							</when>
							<when test='searchCate == "내용"'>
								and (bo_con like upper('%' || #{searchText} || '%')
								or bo_con like lower('%' || #{searchText} || '%'))
							</when>
							<when test='searchCate == "의뢰인"'>
								and (me_nick like upper('%' || #{searchText} || '%')
								or  me_nick like lower('%' || #{searchText} || '%'))
							</when>
						</choose>
				</if>	
					
		</where>
		order by BO_DATE desc
		
		
	</select>	
	
	<select id="callmeId" parameterType="string" resultType="string">
		select me_id
		from member
		where me_nick = #{nickName}
	</select>

	<select id="selectThumbnail" parameterType="_int" resultType="string">
		select con_cop
		from contents
		where con_ref = #{boNum} and con_level = 0
	</select>
	
	<insert id="goDispute" parameterType="Dispute">
		insert into dispute
		values (di_seq.nextval, #{diRef}, default, #{diStatus}, #{diContent}, sysdate)
	</insert>
	
	<select id="dpList" resultMap="DisputeResultSet">
		select *
		from dispute
		where di_refnum = #{boNum}
	</select>
	
	<resultMap type="Dispute" id="DisputeResultSet">
		<id property="diNum" column="DI_NUM"/>
		<result property="diRef" column="DI_REFNUM"/>
		<result property="diRps" column="DI_PRS"/>
		<result property="diStatus" column="DI_STATUS"/>
		<result property="diContent" column="DI_CONTENT"/>
		<result property="diDate" column="DI_DATE"/>
	</resultMap>
	
	<delete id="cancleDispute" parameterType="Dispute">
		delete from dispute
		where DI_REFNUM = #{diRef} and DI_STATUS = #{diStatus}
	</delete>
	
	<delete id="endDispute1" parameterType="Dispute">
		delete from dispute
		where DI_REFNUM = #{diRef}
	</delete>
	
	<update id="endDispute2" parameterType="Dispute">
		update board
		set bo_del = 'Y'
		where bo_num = #{diRef} 
	</update>
</mapper>