<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="portpolioMapper">
	<insert id="enrollPortpolio" parameterType="Portpolio">
		insert into portpolio
		values(po_seq.nextval, #{poTitle}, #{poWriter}, #{poDesc}, #{poCategory}, SYSDATE, SYSDATE, DEFAULT, DEFAULT, DEFAULT, DEFAULT)
	</insert>
	
	<insert id="insertPortpolioContents" parameterType="PortpolioContents">
		insert into po_contents
		values(poc_seq.nextval, 
		<choose>
			<when test="pocRef == 0">
				po_seq.currval,
			</when>
			<otherwise>
				#{pocRef},
			</otherwise>
		</choose>
		#{pocOrigin}, #{pocModify}, #{pocPath}, DEFAULT, #{pocLevel})
	</insert>
	
	<resultMap type="Portpolio" id="portpolioResultSet">
		<id property="poNum" column="PO_NUM"/>
		<result property="poTitle" column="PO_TITLE"/>
		<result property="poWriter" column="PO_WRITER"/>
		<result property="poDesc" column="PO_DESC"/>
		<result property="poCategory" column="PO_CATEGORY"/>
		<result property="poEnrollDate" column="PO_ENROLLDATE"/>
		<result property="poModifyDate" column="PO_MODIFYDATE"/>
		<result property="poUseYn" column="PO_USE_YN"/>
		<result property="poFee" column="PO_FEE"/>
		<result property="poCount" column="PO_COUNT"/>
		<result property="poStatus" column="PO_STATUS"/>
	</resultMap>
	
	<select id="getPortpolioCount" parameterType="Portpolio" resultType="_int">
		select count(*)
		from portpolio
		<where>
			po_writer = #{poWriter}
			and po_status = 'Y'
			<if test="poCategory != null">
				<if test="poCategory.equals('image')">
					and po_category in ('이미지 편집', '이미지 제작')
				</if>
				<if test="poCategory.equals('video')">
					and po_category in ('동영상 편집', '동영상 제작') 				
				</if>
			</if>
		</where>
	</select>
	
	<resultMap type="PortpolioContents" id="pcResultSet">
		<id property="poNum" column="PO_NUM"/>
		<result property="poTitle" column="PO_TITLE"/>
		<result property="poWriter" column="ME_NICK"/>
		<result property="poDesc" column="PO_DESC"/>
		<result property="poCategory" column="PO_CATEGORY"/>
		<result property="poEnrollDate" column="PO_ENROLLDATE"/>
		<result property="poModifyDate" column="PO_MODIFYDATE"/>
		<result property="poUseYn" column="PO_USE_YN"/>
		<result property="poFee" column="count(r.por_ref)"/>
		<result property="poCount" column="PO_COUNT"/>
		<result property="poStatus" column="ME_ID"/>
		<result property="pocNum" column="POC_NUM"/>
		<result property="pocRef" column="POC_REF"/>
		<result property="pocOrigin" column="POC_ORGIN"/>
		<result property="pocModify" column="POC_MODIFY"/>
		<result property="pocPath" column="SUBSTR(c.poc_path,-35)"/>
		<result property="pocStatus" column="con_cop"/>
		<result property="pocLevel" column="POC_LEVEL"/>
	</resultMap>
	
	<select id="selectPortpolioList" parameterType="Portpolio" resultMap="pcResultSet">
		select p.*, c.*, SUBSTR(c.poc_path,-35), m.me_nick, m.me_id, count(r.por_ref), SUBSTR(con.con_url,-23), con.con_cop
		from portpolio p
     		 left join po_contents c on (PO_NUM = POC_REF)
     		 left join member m on (po_writer = m.me_id)
     		 left join po_reply r on (po_num = por_ref)
     		 left join member rm on (por_writer = rm.me_id)
     		 left join contents con on (rm.me_con_num = con_num)
		<where>
			po_writer = #{poWriter} and poc_level = 0 and po_status = 'Y' and SUBSTR(con.con_url,-23) IS NOT NULL
			<if test="poCategory != null">
				<if test="poCategory.equals('image')">
					and po_category in ('이미지 편집', '이미지 제작')
				</if>
				<if test="poCategory.equals('video')">
					and po_category in ('동영상 편집', '동영상 제작') 				
				</if>
			</if>
		</where>
		group by p.po_num, p.po_title, p.po_writer, p.po_desc, p.po_category, p.po_enrolldate, p.po_modifydate, p.po_use_yn, p.po_fee, p.po_count, p.po_status, 
         		 c.poc_num, c.poc_ref, c.poc_orgin, c.poc_modify, c.poc_path, c.poc_status, c.poc_level, SUBSTR(c.poc_path,-35), m.me_nick, m.me_id,
         		 SUBSTR(con.con_url,-23), con.con_cop
		order by po_enrolldate desc, poc_modify desc
	</select>
	
	<select id="getMyPagePortCount" parameterType="string" resultType="_int">
		select count(*)
		from portpolio
		where po_writer = #{userId} and po_status = 'Y'
	</select>
	
	<select id="selectMyPagePortList" parameterType="string" resultMap="pcResultSet">
		select p.*, c.*, m.*, SUBSTR(c.poc_path,-35)
		from portpolio p
			 left join po_contents c on (po_num = poc_ref)
			 left join member m on (po_writer = me_id)
		where po_writer = #{userId} and poc_level = 0 and po_status = 'Y'
		order by po_enrolldate desc, poc_modify desc
	</select>
	
	<insert id="enrollPoReply" parameterType="PortpolioReply">
		insert into po_reply
		values(por_seq.nextval, #{porRef}, #{porWriter}, #{porContent}, SYSDATE, DEFAULT)
	</insert>
	
	<resultMap type="PortpolioReply" id="prResultSet">
		<id property="porNum" column="por_num"/>
		<result property="porWriter" column="me_nick"/>
		<result property="porRef" column="por_ref"/>
		<result property="porContent" column="por_content"/>
		<result property="porEnrollDate" column="por_enrolldate"/>
		<result property="conCop" column="con_cop"/>
		<result property="conUrl" column="SUBSTR(pc.con_url,-23)"/>		
	</resultMap>
	
	<select id="selectPoReply" parameterType="PortpolioReply" resultMap="prResultSet">
		select p.*, pr.*, rm.*, pc.*, SUBSTR(pc.con_url,-23)
		from portpolio p 
     	     left join po_reply pr on (po_num = por_ref)
    		 left join member rm on (por_writer = rm.me_id)
     		 left join contents pc on (me_con_num = con_num)
		where po_num = #{porRef}
		order by por_num asc
	</select>
	
	<select id="selectPoReplyFirst" parameterType="_int" resultMap="prResultSet">
		select p.*, pr.*, rm.*, pc.*, SUBSTR(pc.con_url,-23)
		from portpolio p 
     	     left join po_reply pr on (po_num = por_ref)
    		 left join member rm on (por_writer = rm.me_id)
     		 left join contents pc on (me_con_num = con_num)
		where po_num = #{poNum}
		order by por_num asc
	</select>
	
	<update id="deletePortpolio" parameterType="Portpolio">
		update portpolio
		set po_status = 'N'
		where po_num = #{poNum}
	</update>
	
	<update id="updatePortCount" parameterType="Portpolio">
		update portpolio
		set po_count = po_count + 1
		where po_num = #{poNum}
	</update>
	
	<select id="selectAttachFile" parameterType="_int" resultMap="pcResultSet">
		select c.*, SUBSTR(c.poc_path,-35)
		from po_contents c
		where poc_ref = #{poNum} and poc_level > 0
		order by poc_level 
	</select>
	
	<select id="updatePortView" parameterType="Portpolio" resultMap="pcResultSet">
		select p.*, c.*, SUBSTR(c.poc_path,-35), m.me_nick, m.me_id
		from portpolio p
     		 left join po_contents c on (PO_NUM = POC_REF)
     		 left join member m on (po_writer = m.me_id)
     		 left join po_reply r on (po_num = por_ref)
     		 left join member rm on (por_writer = rm.me_id)
     		 left join contents con on (rm.me_con_num = con_num)
		<where>
			po_num = #{poNum} and poc_level = 0 and po_status = 'Y'
			<if test="poCategory != null">
				<if test="poCategory.equals('image')">
					and po_category in ('이미지 편집', '이미지 제작')
				</if>
				<if test="poCategory.equals('video')">
					and po_category in ('동영상 편집', '동영상 제작') 				
				</if>
			</if>
		</where>
		group by p.po_num, p.po_title, p.po_writer, p.po_desc, p.po_category, p.po_enrolldate, p.po_modifydate, p.po_use_yn, p.po_fee, p.po_count, p.po_status, 
         		 c.poc_num, c.poc_ref, c.poc_orgin, c.poc_modify, c.poc_path, c.poc_status, c.poc_level, SUBSTR(c.poc_path,-35), m.me_nick, m.me_id
		order by po_enrolldate desc, poc_modify desc 
	</select>
	
	<update id="updatePortpolio" parameterType="Portpolio">
		update portpolio
		set po_title = #{poTitle}, po_desc = #{poDesc}, po_category = #{poCategory}, po_modifydate = sysdate, po_use_yn = #{poUseYn} 
		where po_num = #{poNum}
	</update>
	
	<update id="updatePortpolioContents" parameterType="PortpolioContents">
		update po_contents
		set poc_orgin = #{pocOrigin}, poc_modify = #{pocModify}, poc_path = #{pocPath}
		where poc_ref = #{poNum} and poc_level = #{pocLevel}
	</update>
	
	<delete id="deletePortContents" parameterType="Portpolio">
		delete from po_contents
		where poc_ref = #{poNum}
	</delete>

	<resultMap type="PortpolioContents" id="getContentsResultSet">
		<id property="poNum" column="PO_NUM"/>
		<result property="poTitle" column="PO_TITLE"/>
		<result property="poWriter" column="PO_WRITER"/>
		<result property="poDesc" column="PO_DESC"/>
		<result property="poCategory" column="PO_CATEGORY"/>
		<result property="poEnrollDate" column="PO_ENROLLDATE"/>
		<result property="poModifyDate" column="PO_MODIFYDATE"/>
		<result property="poUseYn" column="PO_USE_YN"/>
		<result property="poFee" column="count(r.por_ref)"/>
		<result property="poCount" column="PO_COUNT"/>
		<result property="poStatus" column="ME_ID"/>
		<result property="pocNum" column="POC_NUM"/>
		<result property="pocRef" column="POC_REF"/>
		<result property="pocOrigin" column="POC_ORGIN"/>
		<result property="pocModify" column="POC_MODIFY"/>
		<result property="pocPath" column="POC_PATH"/>
		<result property="pocStatus" column="con_cop"/>
		<result property="pocLevel" column="POC_LEVEL"/>
	</resultMap>
	
	<select id="getContents" parameterType="Portpolio" resultMap="getContentsResultSet">
		select *
		from po_contents
		where poc_ref = #{poNum} and poc_status = 'N'
		order by substr(poc_modify, 0, 14)
	</select>
		  
</mapper>